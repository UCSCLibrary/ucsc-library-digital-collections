# frozen_string_literal: true
# Generated by curation_concerns:models:install
class Collection < ActiveFedora::Base
  include ::Hyrax::CollectionBehavior
  # You can replace these metadata if they're not suitable
  include ::Bulkrax::Metadata

  include Hyrax::Serializers
  include GlobalID::Identification
  include Hyrax::WithEvents

  self.indexer = ::CollectionIndexer

  def reindex_extent
    @reindex_extent ||= Hyrax::Adapters::NestingIndexAdapter::LIMITED_REINDEX
  end

  def visibility=(value)
    if (value == "request")
      request_visibility!
      return true
    end
    if (value == "campus")
      campus_visibility!
      return true
    end
    super
  end

  def visibility
    return "request" if read_groups.include? "request"
    return "campus" if read_groups.include? "campus"
    super
  end

  def represented_visibility
    super.push("request").push("campus")
  end

  def request_visibility!
    visibility_will_change! unless visibility == "request"
    remove_groups = represented_visibility - [ "request", Hydra::AccessControls::AccessRight::PERMISSION_TEXT_VALUE_PUBLIC]
    set_read_groups([ "request", Hydra::AccessControls::AccessRight::PERMISSION_TEXT_VALUE_PUBLIC], remove_groups)
  end

  def campus_visibility!
    visibility_will_change! unless visibility == "campus"
    remove_groups = represented_visibility - [ "campus", Hydra::AccessControls::AccessRight::PERMISSION_TEXT_VALUE_PUBLIC]
    set_read_groups([ "campus", Hydra::AccessControls::AccessRight::PERMISSION_TEXT_VALUE_PUBLIC], remove_groups)
  end

#  property :metadataInheritance, predicate: "https://digitalcollections.library.ucsc.edu/ontology/metadataInheritance", multiple: false

  # This must come after the properties because it finalizes the metadata
  # schema (by adding accepts_nested_attributes)
  include ::Hyrax::BasicMetadata
end
